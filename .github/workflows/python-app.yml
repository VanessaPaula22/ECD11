# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        #pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest test/
    - name: Zip the repository
      run: zip -r app.zip .
    - name: Upload ZIP file to PythonAnywhere
      env:
        USERNAME: custodma
        API_TOKEN: 85ace66a74e4fdfd5048c9eb4a2d512513a571d4
      run: |
        # Envia o arquivo ZIP para o diretório do PythonAnywhere
        curl -X POST -F "path=/home/$USERNAME/app.zip" -F "content=@app.zip" \
        "https://www.pythonanywhere.com/api/v0/user/$USERNAME/files/path/home/$USERNAME/app.zip" \
        -H "Authorization: Token $API_TOKEN"
    - name: Unzip on PythonAnywhere
      env:
        USERNAME: custodma
        API_TOKEN: 85ace66a74e4fdfd5048c9eb4a2d512513a571d4
      run: |
        # Executa o comando para descompactar o arquivo no diretório de destino
        curl -X POST "https://www.pythonanywhere.com/api/v0/user/$USERNAME/consoles/" \
        -H "Authorization: Token $API_TOKEN" \
        -H "Content-Type: application/json" \
        -d '{"command": "unzip -o /home/'"$USERNAME"'/app.zip -d /home/ecd11"}'
    - name: Set up Cron Job on PythonAnywhere
      env:
        USERNAME: custodma
        API_TOKEN: 85ace66a74e4fdfd5048c9eb4a2d512513a571d4
      run: |
        # Configura o cron job para rodar o script principal
        curl -X POST "https://www.pythonanywhere.com/api/v0/user/$USERNAME/schedule/" \
        -H "Authorization: Token $API_TOKEN" \
        -H "Content-Type: application/json" \
        -d '{
              "command": "python3 -u /home/ecd11/main.py",
              "interval": "daily",
              "hour": "12",
              "minute": "0"
            }'

